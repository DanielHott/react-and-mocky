{"version":3,"sources":["components/CharacterCard/index.js","components/Loading/index.js","App.js","reportWebVitals.js","index.js"],"names":["CharacterCard","this","props","character","name","image","status","className","alt","src","React","Component","Loading","App","getCharacters","a","fetch","then","response","json","results","setState","isLoading","characters","filteredCharacters","handleOnChange","value","target","search","handleFilterCharacters","state","filteredArray","filter","toUpperCase","includes","type","placeholder","onChange","onClick","map","item","Math","random","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAEMA,E,4JACF,WACI,MAA6CC,KAAKC,MAA1CC,UAAaC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,OAClC,OACI,0BAASC,UAAU,OAAnB,UACI,qBAAKC,IAAKJ,EAAMK,IAAKJ,IACrB,oBAAIE,UAAU,YAAd,SAA2BH,IAC3B,mBAAGG,UAAU,cAAb,SAA4BD,W,GAPhBI,IAAMC,WAYnBX,ICZTY,G,kKACF,WACI,OACI,oBAAIL,UAAU,UAAd,+B,GAHUG,IAAMC,YAObC,IC8CAC,E,kDAjDb,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IAQRY,cATkB,sBASF,8BAAAC,EAAA,4DACG,4CADH,SAEUC,MADP,6CACuBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFpD,gBAEPC,EAFO,EAEPA,QACP,EAAKC,SAAS,CAACC,WAAU,EAAOC,WAAWH,EAASI,mBAAmBJ,IAHzD,2CATE,EAoBlBK,eAAiB,YAAuB,IAAbC,EAAY,EAApBC,OAAQD,MACzB,EAAKL,SAAS,CAACO,OAAOF,KArBN,EAwBlBG,uBAAyB,WACvB,MAA8B,EAAKC,MAA3BP,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,OACdG,EAAgBR,EAAWS,QAAO,qBAAE5B,KAAc6B,cAAcC,SAASN,EAAOK,kBACtF,EAAKZ,SAAS,CAACG,mBAAmBO,KAzBlC,EAAKD,MAAM,CACTP,WAAW,GACXC,mBAAmB,GACnBF,WAAU,EACVM,OAAO,IANO,E,qDAgBlB,WACE3B,KAAKa,kB,oBAaP,WACE,MAAwCb,KAAK6B,MAAtCN,EAAP,EAAOA,mBAAoBF,EAA3B,EAA2BA,UAC3B,OACE,sBAAKf,UAAU,MAAf,UACE,iCACE,uBAAO4B,KAAK,OAAOC,YAAY,kBAAkBC,SAAUpC,KAAKwB,iBAChE,wBAAQU,KAAK,SAASG,QAASrC,KAAK4B,uBAApC,uBAGAP,EAAY,cAAC,EAAD,IACZ,yBAASf,UAAU,YAAnB,SACGiB,EAAmBe,KAAI,SAAAC,GAAI,OAAG,cAAC,EAAD,CAAerC,UAAWqC,GAAWC,KAAKC,sB,GA1CnEhC,IAAMC,WCOTgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.073a035e.chunk.js","sourcesContent":["import React from 'react'\nimport './styles.css'\nclass CharacterCard extends React.Component {\n    render(){\n        const { character : {name, image, status}} = this.props\n        return(\n            <article className='card'>\n                <img alt={name} src={image} />\n                <h3 className='card-name'>{name}</h3>\n                <p className='card-status'>{status}</p>\n            </article>\n        )\n    }\n}\nexport default CharacterCard;","import React from 'react'\nimport './styles.css'\nclass Loading extends React.Component{\n    render(){\n        return(\n            <h3 className='loading'>Carregando...</h3>\n        )\n    }\n} \nexport default Loading","import React from 'react'\nimport './App.css';\nimport CharacterCard from './components/CharacterCard';\nimport Loading from './components/Loading';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      characters:[],\n      filteredCharacters:[],\n      isLoading:true,\n      search:''\n    }\n  }\n  getCharacters = async () => {\n    const endpoint = 'https://rickandmortyapi.com/api/character';\n    const {results} = await fetch(endpoint).then(response => response.json())\n    this.setState({isLoading:false, characters:results, filteredCharacters:results})\n  }\n\n\n  componentDidMount(){\n    this.getCharacters()\n  }\n\n  handleOnChange = ({target:{value}}) => {\n    this.setState({search:value})\n  }\n\n  handleFilterCharacters = () => {\n    const { characters, search} = this.state;\n    const filteredArray = characters.filter(({name})=> name.toUpperCase().includes(search.toUpperCase()))\n    this.setState({filteredCharacters:filteredArray})\n  }\n\n  render(){\n    const {filteredCharacters, isLoading} = this.state\n    return (\n      <div className=\"App\">\n        <form>\n          <input type='text' placeholder='Rick Sanches...' onChange={this.handleOnChange}/>\n          <button type='button' onClick={this.handleFilterCharacters}>Buscar</button>\n        </form>\n        {\n          isLoading ? <Loading/> : \n          <section className='card-list'>\n            {filteredCharacters.map(item=> <CharacterCard character={item} key={Math.random()} />)}\n          </section>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}